@font-face {
    font-family: 'Roboto';
    src: url('../fonts/Roboto-Light.ttf');
}

@font-face {
    font-family: 'Montserrat';
    src: url('../fonts/Montserrat-VariableFont_wght.ttf');
}

:root {
    --shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;
    --light-white: #f7f7f7;
    --light-grey: #eeeeee;
    --text-color: #313d40;

    --low-pririty: #b28ae4;
    --medium-priority: #ffce71;
    --high-priority: #ea5b70;
}

*,
*::before,
*::after {

    box-sizing: border-box;
    font-family: inherit; 
}

body {
    margin: 0;
    font-family: 'Roboto', sans-serif;  
    font-weight: 300;
    font-size: 1.5rem;
    background-color: var(--light-grey);
    color: var(--text-color);
}

.page-container {
    display: flex;
    background-color: var(--light-white);
    box-shadow: var(--shadow);
    height: 100vh;
}

.app-title {
    display: flex;
    flex-direction: column;
    text-align: center;
    justify-content: center;
    align-items: center;
    gap: 1rem;
    min-width: 200px;

    & img {
        width: 100px;
    }
}

nav {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    width: 20%;
    padding: 2rem 0rem;
}

.nav-btn {
    display: flex;
    align-items: center;
    padding: 1rem 3rem;
    width: 100%;
    gap: 1rem;
}

.nav-icon {
    width: 1.3rem;
    opacity: 80%;
}

.nav-btn:hover {
    background-color: white;
    transition: ease-in-out 400ms;
    cursor: pointer;
}

.nav-btns {
    display: flex;
    flex-direction: column;
    gap: 2rem;
}

.projects-header {
    display: flex;
    align-items: center;
    gap: .5rem;
    text-transform: uppercase;
    font-size: 1rem;
    padding: 1rem 2rem;
    letter-spacing: .2rem;
    font-weight: bold;
}

#new-project-btn {
    width: 1.5rem;
}

#new-project-btn:hover {
    opacity: 60%;
    transition: ease-in-out 400ms;
    cursor: pointer;
}

.project-btn {
    font-size: 1.3rem;
    gap: 1rem;

    & .bullet-point {
        font-size: 2rem;
        opacity: 80%;
    }
}

h1, h2 {
    margin: 0px;
}

main {
    width: 80%;
    padding: 2rem;
    background-color: white;
}

button {
    background-color: var(--light-white);
    border: solid 1px rgba(0, 0, 0, 0.371);
    box-shadow: var(--shadow);
    border-radius: 10px;
    padding:.5rem;
}

button:hover {
    transition: ease-in-out 400ms;
    background-color: white;
}

header {
    display: flex;
    justify-content: space-between;
    height: 10%;
    padding-bottom: 1rem;
}

#create-new-task {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 2rem;
    & img {
        width: 1.5rem;
    }
}

#create-new-task:hover {
    opacity: 60%;
    transition: ease-in-out 400ms;
    cursor: pointer;
}

#content {
    height: 90%;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 2rem;
    gap: 2rem;
}

form {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 1.5rem;
}

input, select, textarea {
    width: 40vw;
}

label {
    display: flex;
    flex-direction: column;
}
  
input {
    border: 1px solid gray;
    border-radius: 6px;
    position: relative;
    margin: 10px;
    line-height: 6ex;
}

#tasks-wrapper { 
    display: flex;
    flex-direction: column;
    min-width: 80%;
    gap: 3rem;
    padding-top: 2rem;
    padding-bottom: 2rem;

    & input {
        width: 1rem;
    }


}

.task {
    display: flex;
    flex-direction: column;
    border: black solid;
    align-items: center;
    padding: .5rem;
    border: solid .1rem rgba(0, 0, 0, 0.225);
    border-radius: 10px;
    box-shadow: var(--shadow);

    & #expand-task {
        width: 1.5rem;
    }

    #edit-task {
        width: 1.3rem;
    }
}

#edit-task {
    width: 1.5rem;
}

#page-title {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.collapsed {
    display: flex;
    width: 100%;
}

.task-info {
    display: flex;
    justify-content:space-around;
    width: 80%;
}

.hidden {
    visibility: hidden;
}

.visible {
    visibility: visible;
}

.not-expanded {
    display: none;
}

.expanded {
    display: block;
    padding: 1rem;
}

.actions {
    display: flex;
    align-items: center;
    gap: .5rem;
    justify-self: flex-end;
}

.task-completed {
    text-decoration: line-through;
    color: rgba(0, 0, 0, 0.298); 
}

.error-message {
    color: red;
}

.high-priority {
    border-top: solid .3rem var(--high-priority);
}

.medium-priority {
    border-top: solid .3rem var(--medium-priority);
}

.low-priority {
    border-top: solid .3rem var(--low-pririty);
}